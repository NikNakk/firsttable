% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/first-table.R
\name{first_table}
\alias{first_table}
\title{First Table}
\usage{
first_table(
  .data,
  ...,
  .column_variable = NULL,
  .column_type = c("default", "numeric"),
  .options = first_table_options()
)
}
\arguments{
\item{.data}{`data.frame` or `tibble` to use as data source}

\item{...}{row details}

\item{.column_variable}{variable used for columns (if any)}

\item{.column_type}{type of column (default or numeric)}

\item{.options}{options to use for formatting (see details)}
}
\value{
object of class \code{first_table}  with the requested rows and columns;
}
\description{
First Table
}
\details{
This function takes a \code{\link[base]{data.frame}} or \code{\link[tibble]{tibble}}
and a row and column specification and generates a table along the lines of the first table
used in many medical journal articles. The row specification can either use one of the \code{_row}
functions, or if the defaults are appropriate can just be a bare column name or calculation
using a column. These calculations are implemented using \code{\link[rlang]{eval_tidy}} and
support the \code{\link[rlang]{quasiquotation}} operators such as \code{\link[rlang]{!!}} and
\code{\link[rlang]{!!!}}.

Options can be specified as a list or by using \code{\link{first_table_options}}.
}
\examples{
first_table(mtcars,
  .column_variable = cyl,
  "Miles per gallon" = mpg,
  "Transmission" = factor(am))

# Example demonstrating use of quasiquotation from rlang
library(rlang)
my_rows <- quos(
  kruskal_row(Sepal.Length, row_digits = 0),
  "Sepal width" = first_table_row(Sepal.Width, row_digits = 2),
  "Wide petals" = Petal.Width > median(Petal.Width)
)
first_table(iris,
  .column_variable = Species,
  !!!my_rows
)

# Example demonstrating use of survival column variable
library(survival)
first_table(lung,
  .column_variable = Surv(time, status),
  .options = list(include_n = TRUE, include_n_per_col = TRUE),
   ECOG = factor(ph.ecog),
   `Meal calories` = first_table_row(meal.cal, row_digits = 2)
)
}
